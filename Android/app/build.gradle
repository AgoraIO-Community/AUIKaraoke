apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "io.agora.karaoke"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 10
        versionName "1.0.0"
        ndk.abiFilters 'armeabi-v7a','arm64-v8a'//, 'x86', 'x86-64'

        def properties = new Properties()
        properties.load(rootProject.file("local.properties").newDataInputStream())

        final def SERVER_HOST = properties.getProperty("SERVER_HOST")
        final def AGORA_APP_ID = properties.getProperty("AGORA_APP_ID")
        final def AGORA_APP_CERT = properties.getProperty("AGORA_APP_CERT")
        final def IM_APP_KEY = properties.getProperty("IM_APP_KEY")
        final def IM_CLIENT_ID = properties.getProperty("IM_CLIENT_ID")
        final def IM_CLIENT_SECRET = properties.getProperty("IM_CLIENT_SECRET")
        if (SERVER_HOST.isEmpty()) {
            throw new GradleException("请在 local.properties 中配置完整的 SERVER_HOST")
        }
        if (AGORA_APP_ID.isEmpty()) {
            throw new GradleException("请在 local.properties 中配置完整的 AGORA_APP_ID")
        }

        buildConfigField "String", "SERVER_HOST", "\"$SERVER_HOST\""
        buildConfigField "String", "AGORA_APP_ID", "\"$AGORA_APP_ID\""
        buildConfigField "String", "AGORA_APP_CERT", "\"$AGORA_APP_CERT\""
        buildConfigField "String", "IM_APP_KEY", "\"$IM_APP_KEY\""
        buildConfigField "String", "IM_CLIENT_ID", "\"$IM_CLIENT_ID\""
        buildConfigField "String", "IM_CLIENT_SECRET", "\"$IM_CLIENT_SECRET\""
    }

    signingConfigs {
        release {
            storeFile new File(rootProject.rootDir.absolutePath + "/keystore.jks")
            storePassword "230511"
            keyAlias "uikit"
            keyPassword "230511"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                outputFileName = new File(rootProject.name + "_" +
                        "v" + defaultConfig.versionName + "_" +
                        new Date().format("yyyyMMddHHmm") + "_" +
                        buildType.name + ".apk")
            }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.github.bumptech.glide:glide:4.15.0'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation project(':asceneskit')
}